on:
  # Trigger the workflow on push or
  # pull request, but only for the
  # main branch.
  push:
    branches:
      - main
      - devel
  pull_request:
    branches:
      - main
  # Weekly run to account for
  # changed dependencies.
  schedule:
    - cron: '17 03 * * 0'

name: CI
jobs:
  build:
    name: Build and test
    runs-on: ubuntu-latest # or macOS-latest, or windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Haskell
        uses: haskell-actions/setup@v2
        with:
          enable-stack: true
          stack-version: 'latest'

      - name: Cache Haskell dependencies
        uses: actions/cache@v4
        with:
          path: ~/.stack
          key: v2-haskell-deps-${{ runner.os }}-store-${{ hashFiles('stack.yaml.lock') }}-${{ hashFiles('package.yaml') }}
          restore-keys: v2-haskell-deps-

      - name: Cache node modules
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: v2-npm-deps-${{ hashFiles('**/package-lock.json') }}
          restore-keys: v2-npm-deps-

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Cache pip
        uses: actions/cache@v4
        with:
          # This path is specific to Ubuntu
          path: ~/.cache/pip
          # Look to see if there is a cache hit for the corresponding requirements file
          key: v2-pip-${{ runner.os }}
          restore-keys: |
            ${{ runner.os }}-pip-
            ${{ runner.os }}-

      - name: Install mkdocs
        run: pip install --upgrade pip mkdocs

      - name: Create git-version
        run: make git-version

      - name: Bootstrap npm/typescript code
        run: make bootstrap

      - name: Setup GHC for the resolver
        run: stack setup --no-terminal

      - name: Build the dependencies
        run: stack build --only-dependencies

      - name: Build the test dependencies
        run: stack test --only-dependencies

      - name: Build the code
        run: stack build --pedantic --test --no-run-tests --coverage --flag corydalis:dev

      - name: Run tests
        run: stack test --coverage --flag corydalis:dev

      - name: Generate coverage report
        uses: 8c6794b6/hpc-codecov-action@v3
        with:
          target: stack:test
          excludes: Main

      - name: Upload coverage report
        uses: codecov/codecov-action@v3

      - name: Build documentation
        run: make doc
