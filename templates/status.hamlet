<h1>Corydalis
  <small> - status page

<div .row>
  <div .col-12 .mb-3>
   <div .card>
      <div .card-header>Overall status
      <div .card-body>
        <div .progress>
          <div .progress-bar class="#{overall_role} #{overall_striptxt}" role=progressbar aria-valuenow="#{overall_perc}" aria-valuemin="0" aria-valuemax="100" style="width: #{overall_perc}%">
                #{overall_text}

<div .row>
  <div .col-12 .col-md-4>
    <div .card class="#{repoStatusToCardStyle repoState}">
      <div .card-header>Repository status
      <div .card-body>
        $case repoState
          $of RepoEmpty
            <p .card-text>
              Repository is being (re)initialized.
          $of RepoStarting
            <p .card-text>
              Preparing to scan the repository.
          $of RepoScanning { rsScanGoal = ws }
            ^{repoInProgress now scanning ws}
          $of RepoRendering { rsRenderGoal = ws }
            ^{repoInProgress now rendering ws}
          $of RepoCleaning { rsCleanGoal = ws }
            ^{repoInProgress now cleaning ws}
          $of RepoFinished { rsScanResults = WorkResults { wrStart = b }, rsRenderResults = WorkResults { wrEnd = er }}
            <p .card-text>
              All work completed.
              Repository age is <abbr title="Scanned at #{show b}">#{relTime False (diffZ now b)}</abbr>.
            <p .card-text>
              Total duration: #{relTime False (diffZ er b)}.
          $of RepoError txt
            <h4 .alert-heading>Repository scanning failed
            Error message: #{txt}
        ^{repoContents repo}

  <div .col-12 .col-md-4>
    <div .card class="#{repoStatusToScanStyle repoState}">
      <div .card-header>Scan status
      $case repoState
        $of RepoEmpty
          ^{workIdle scanning}
        $of RepoStarting
          ^{workIdle scanning}
        $of RepoScanning { rsScanGoal = ws }
          ^{workInProgress now scanning scanProgress ws}
        $of RepoRendering { rsScanResults = sr }
          ^{workResults now sr scanning "files"}
        $of RepoCleaning { rsScanResults = sr }
          ^{workResults now sr scanning "files"}
        $of RepoFinished { rsScanResults = sr }
          ^{workResults now sr scanning "files"}
        $of RepoError _
          ^{scanFailed}

  <div .col-12 .col-md-4>
    <div .card class="#{repoStatusToRenderStyle repoState}">
      <div .card-header>Rendering status
      $case repoState
        $of RepoEmpty
          ^{workIdle rendering}
        $of RepoStarting
          ^{workIdle rendering}
        $of RepoScanning {}
          ^{workIdle rendering}
        $of RepoRendering { rsRenderGoal = ws }
          ^{workInProgress now rendering renderProgress ws}
        $of RepoCleaning { rsRenderResults = rr }
          ^{workResults now rr rendering "images"}
        $of RepoFinished { rsRenderResults = rr }
          ^{workResults now rr rendering "images"}
        $of RepoError _
          ^{scanFailed}

  <div .col-12 .col-md-4>
    <div .card class="#{repoStatusToCleanStyle repoState}">
      <div .card-header>Cache cleaning status
      $case repoState
        $of RepoEmpty
          ^{workIdle cleaning}
        $of RepoStarting
          ^{workIdle cleaning}
        $of RepoScanning {}
          ^{workIdle cleaning}
        $of RepoRendering {}
          ^{workIdle cleaning}
        $of RepoCleaning { rsCleanGoal = ws }
          ^{workInProgress now cleaning cleanProgress ws}
        $of RepoFinished { rsCleanResults = rr }
          ^{workResults now rr rendering "images"}
        $of RepoError _
          ^{scanFailed}
